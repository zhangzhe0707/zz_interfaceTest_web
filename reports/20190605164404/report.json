{"report": {"environment": {"Python": "3.7.3", "Platform": "Linux-4.15.0-30deepin-generic-x86_64-with-debian-9.0"}, "tests": [{"name": "RunCode/test_Run.py::test_all_run[case_data0]", "duration": 0.003760099411010742, "run_index": 0, "setup": {"name": "setup", "duration": 0.00045013427734375, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0023627281188964844, "outcome": "failed", "longrepr": "case_data = {'caseData': '/', 'caseFrontSQL': '', 'caseLabel': '', 'caseMethod': 'ip=27.193.13.255', ...}\n\n    @pytest.mark.parametrize('case_data', base_code.get_case_data())\n    def test_all_run(case_data):\n        base_http = BaseHttp()\n        response = None\n        Log.logger.info(case_data['caseName'])\n        if case_data['caseMethod'] == 'post':\n            response = base_http.post(case_data['caseUri'], case_data['caseData'])\n        elif case_data['caseMethod'] == 'get':\n            response = base_http.get(case_data['caseUri'], case_data['caseData'])\n        elif case_data['caseMethod'] == \"post_with_json\":\n            response = base_http.post_with_json(case_data[\"caseUri\"], case_data[\"caseData\"])\n        else:\n            Log.logger.info(\"\u672a\u627e\u5230\u6b63\u786e\u7684 Method \u7c7b\u578b\")\n    \n        # \u65e5\u5fd7\u8bb0\u5f55\u8fd4\u56de\u4f53\u5185\u5bb9\n>       base_code.show_retrun_msg(response)\n\nRunCode/test_Run.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.baseCode.BaseCode object at 0x7feb024a0e48>, response = None\n\n    def show_retrun_msg(self, response):\n        '''\n        \u8f93\u51faresponse\u4e2d msg \u4fe1\u606f\n        :param response:\n        :return:\n        '''\n>       url = response.url\nE       AttributeError: 'NoneType' object has no attribute 'url'\n\nlib/baseCode.py:42: AttributeError", "log": "baseDB.py                   55 INFO     \u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f!\nbaseDB.py                   69 INFO     \u6267\u884cSQL\u547d\u4ee4\u4e3a:Select Id,EnvName,EnvBaseUrl,EnvScheme,EnvPort,EnvTimeout from WebServer_envconfig where EnvName=\"tianqi\"\nbaseDB.py                   92 INFO     \u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2\u7684\u7ed3\u679c\u5355\u884c\u6570\u636e:(2, 'tianqi', 'ip.tianqiapi.com', 'https', '', '10')\nbaseDB.py                  116 INFO     \u6570\u636e\u5e93\u8fde\u63a5\u5173\u95ed!\nbaseCode.py                 72 INFO     \u6d4b\u8bd5\u73af\u5883\u6570\u636etianqi\u5b8c\u6210\u8bfb\u53d6.\ntest_Run.py                 20 INFO     \u5929\u6c14\ntest_Run.py                 28 INFO     \u672a\u627e\u5230\u6b63\u786e\u7684 Method \u7c7b\u578b"}, "teardown": {"name": "teardown", "duration": 0.0004971027374267578, "outcome": "passed"}, "outcome": "failed"}, {"name": "RunCode/test_Run.py::test_all_run[case_data1]", "duration": 0.004235982894897461, "run_index": 1, "setup": {"name": "setup", "duration": 0.0006031990051269531, "outcome": "passed"}, "call": {"name": "call", "duration": 0.002676725387573242, "outcome": "failed", "longrepr": "case_data = {'caseData': '/', 'caseFrontSQL': '', 'caseLabel': '', 'caseMethod': 'ip=39.82.135.234', ...}\n\n    @pytest.mark.parametrize('case_data', base_code.get_case_data())\n    def test_all_run(case_data):\n        base_http = BaseHttp()\n        response = None\n        Log.logger.info(case_data['caseName'])\n        if case_data['caseMethod'] == 'post':\n            response = base_http.post(case_data['caseUri'], case_data['caseData'])\n        elif case_data['caseMethod'] == 'get':\n            response = base_http.get(case_data['caseUri'], case_data['caseData'])\n        elif case_data['caseMethod'] == \"post_with_json\":\n            response = base_http.post_with_json(case_data[\"caseUri\"], case_data[\"caseData\"])\n        else:\n            Log.logger.info(\"\u672a\u627e\u5230\u6b63\u786e\u7684 Method \u7c7b\u578b\")\n    \n        # \u65e5\u5fd7\u8bb0\u5f55\u8fd4\u56de\u4f53\u5185\u5bb9\n>       base_code.show_retrun_msg(response)\n\nRunCode/test_Run.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <lib.baseCode.BaseCode object at 0x7feb024a0e48>, response = None\n\n    def show_retrun_msg(self, response):\n        '''\n        \u8f93\u51faresponse\u4e2d msg \u4fe1\u606f\n        :param response:\n        :return:\n        '''\n>       url = response.url\nE       AttributeError: 'NoneType' object has no attribute 'url'\n\nlib/baseCode.py:42: AttributeError", "log": "baseDB.py                   55 INFO     \u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f!\nbaseDB.py                   69 INFO     \u6267\u884cSQL\u547d\u4ee4\u4e3a:Select Id,EnvName,EnvBaseUrl,EnvScheme,EnvPort,EnvTimeout from WebServer_envconfig where EnvName=\"tianqi\"\nbaseDB.py                   92 INFO     \u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2\u7684\u7ed3\u679c\u5355\u884c\u6570\u636e:(2, 'tianqi', 'ip.tianqiapi.com', 'https', '', '10')\nbaseDB.py                  116 INFO     \u6570\u636e\u5e93\u8fde\u63a5\u5173\u95ed!\nbaseCode.py                 72 INFO     \u6d4b\u8bd5\u73af\u5883\u6570\u636etianqi\u5b8c\u6210\u8bfb\u53d6.\ntest_Run.py                 20 INFO     \u5929\u6c142\ntest_Run.py                 28 INFO     \u672a\u627e\u5230\u6b63\u786e\u7684 Method \u7c7b\u578b"}, "teardown": {"name": "teardown", "duration": 0.0003528594970703125, "outcome": "passed"}, "outcome": "failed"}], "summary": {"failed": 2, "num_tests": 2, "duration": 0.13606739044189453}, "created_at": "2019-06-05 16:44:05.460449"}}